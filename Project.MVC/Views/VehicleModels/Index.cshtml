@using Project.Service.Pagging
@model PaginatedList<Project.MVC.ViewModels.VehicleModelViewModel>

@{
    ViewData["Title"] = "Vehicle Models";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<h2 class="fw-bold">Vehicle Models</h2>

<div class="d-flex justify-content-between mb-3">
    <form asp-action="Index" method="get" class="d-flex">
        <input type="text" name="searchString" class="form-control me-2" placeholder="Search..." value="@ViewData["CurrentFilter"]" />
        <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
        <input type="hidden" name="pageNumber" value="@Model.PageIndex" />
        <input type="hidden" name="makeId" value="@ViewBag.MakeId" />
        <input type="submit" value="Filter" class="btn btn-primary" />
    </form>

    <div>
        <a href="@Url.Action("Create", "VehicleModels", new { makeId = ViewBag.MakeId })" class="btn btn-success me-2">+ Create New Model</a>
        <a href="@Url.Action("Index", "VehicleMakes")" class="btn btn-outline-secondary">📄 Vehicle Makes</a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered text-center">
        <thead class="table-dark">
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                       asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-makeId="@ViewBag.MakeId">Name</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["AbrvSortParm"]"
                       asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-makeId="@ViewBag.MakeId">Abbreviation</a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Abrv</td>
                    <td>
                        <a href="@Url.Action("Edit", "VehicleModels", new { id = item.Id, makeId = ViewBag.MakeId })" class="btn btn-warning btn-sm">Edit</a>
                        <a href="@Url.Action("Delete", "VehicleModels", new { id = item.Id, makeId = ViewBag.MakeId })" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-center mt-3">
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <input type="button" class="page-link" value="Previous"
       onclick="@Html.Raw("location.href='" +
       Url.Action("Index", "VehicleModels", new {
           pageNumber = Model.PageIndex - 1,
           sortOrder = ViewData["CurrentSort"],
           searchString = ViewData["CurrentFilter"],
           makeId = ViewBag.MakeId
       }) + "';")" />
                </li>
            }
            <li class="page-item disabled">
                <span class="page-link">Page @Model.PageIndex of @Model.TotalPages</span>
            </li>
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <input type="button" class="page-link" value="Next"
                           onclick="@Html.Raw("location.href='" +
               Url.Action("Index", "VehicleModels", new {
                   pageNumber = Model.PageIndex + 1,
                   sortOrder = ViewData["CurrentSort"],
                   searchString = ViewData["CurrentFilter"],
                   makeId = ViewBag.MakeId
               }) + "';")" />
                </li>
            }
        </ul>
    </nav>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">